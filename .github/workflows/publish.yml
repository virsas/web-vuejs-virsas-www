name: Publish website

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "**.md"

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Audit packages
        run: npm audit --audit-level=high
  scan:
    needs: audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install pip
        run: python -m pip install --upgrade pip
      - name: Install njsscan
        run: pip install njsscan
      - name: Scan application
        run: njsscan ./
  build:
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install quasar
        run: npm install -g @quasar/cli
      - name: Install dependencies
        run: npm install --progress=false
      - name: Build application
        env:
          VUE_WEB_NAME: "Virsas"
          VUE_WEB_TITLE: "Virsas"
          VUE_WEB_DESCRIPTION: "Virtual systems and services"
          VUE_WEB_PORT: "3000"
          VUE_WEB_COLOR: "#05a6f7"
          VUE_WEB_URL: "https://www.virsas.com"
          VUE_WEB_ASSETS: "https://assets.virsas.com"
          VUE_VSSAUTH_APP: "https://auth.virsas.com"
          VUE_VSSAUTH_API: "https://api.virsas.com/auth"
        run: quasar build -m ssr
      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
          retention-days: 1
  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Checkout artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: list directory
        run: ls -1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_PUBLISH_WEBSITE_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_PUBLISH_WEBSITE_KEY }}
          aws-region: ${{ secrets.AWS_ECR_PUBLISH_WEBSITE_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: ECR Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: virsas_web
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --all-tags
